name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    env:
      ImageOS: ubuntu22
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18.4' # Define the elixir version [required]
        otp-version: '28.0.2_1' # Define the OTP version [required]
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'
        cache: 'npm'
        cache-dependency-path: apps/ast/asset/package-lock.json
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install Node.js dependencies
      run: |
        if [ -f apps/ast/asset/package.json ]; then
          cd apps/ast/asset/
          npm ci
        fi
    - name: Install dependencies
      run: mix deps.get
    - name: Compile dependencies
      run: mix deps.compile
    - name: Run Credo
      run: mix credo
    - name: Run Coverage
      run: MIX_ENV=test mix coveralls.github --umbrella
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run tests
      run: mix test --cover
